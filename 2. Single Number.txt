Question:

You are given an array A of length N, where N is always an odd integer. There are (N-1)/2 elements in the array that occur twice and one element which occurs once. Your task is to find the only element that occurs once in the array.

Eg: {3,3,2,2,4,1,4} Output is 4

Solution:

1) Using Sorting:

int occursOnce(vector<int> &a, int n){
    sort(a.begin(),a.end());
	 for(int i=0;i<n;i++){
         if(a[i]!=a[i+1]){
            return a[i];
         }
         else{
             i++;
         }
     }   
    return 0;
}

Time Complexity: O(nlogn)
Space Complexity: O(1)

2) Using XOR:

int singleNumber(vector<int>& nums) { 
       int ans=0;
	   for(auto x:nums)
	   ans^=x;
	   return ans;
    }

TC: O(N)
SC: O(1)